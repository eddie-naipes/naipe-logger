name: Build Naipe Logger

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build Windows with NSIS
        run: wails build -platform windows/amd64

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: naipe-logger-windows
          path: build/bin/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          
          if ! sudo apt-get install -y libwebkit2gtk-4.0-dev; then
            echo "Installing webkit2gtk-4.1 and creating compatibility symlink..."
            sudo apt-get install -y libwebkit2gtk-4.1-dev
          
            sudo mkdir -p /usr/lib/x86_64-linux-gnu/pkgconfig/
            sudo ln -sf webkit2gtk-4.1.pc /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.0.pc
          
            if [ -f /usr/lib/pkgconfig/webkit2gtk-4.1.pc ]; then
              sudo ln -sf /usr/lib/pkgconfig/webkit2gtk-4.1.pc /usr/lib/pkgconfig/webkit2gtk-4.0.pc
            fi
          fi
          
          sudo apt-get install -y build-essential pkg-config libgtk-3-dev
          
          pkg-config --exists webkit2gtk-4.0 || pkg-config --exists webkit2gtk-4.1 || echo "WARNING: No webkit2gtk found"

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build Linux
        run: wails build -platform linux/amd64

      - name: Create AppImage
        run: |
          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          
          mkdir -p NaipeLogger.AppDir/usr/bin
          mkdir -p NaipeLogger.AppDir/usr/share/applications
          mkdir -p NaipeLogger.AppDir/usr/share/pixmaps
          
          cp build/bin/* NaipeLogger.AppDir/usr/bin/naipe-logger
          
          cat > NaipeLogger.AppDir/naipe-logger.desktop << EOF
          [Desktop Entry]
          Type=Application
          Name=Naipe Logger
          Exec=naipe-logger
          Icon=naipe-logger
          Categories=Office;ProjectManagement;
          Comment=Teamwork Time Logger Application
          EOF
          
          cat > NaipeLogger.AppDir/usr/share/applications/naipe-logger.desktop << EOF
          [Desktop Entry]
          Type=Application
          Name=Naipe Logger
          Exec=naipe-logger
          Icon=naipe-logger
          Categories=Office;ProjectManagement;
          Comment=Teamwork Time Logger Application
          EOF
          
          echo '#!/bin/bash' > NaipeLogger.AppDir/AppRun
          echo 'exec "$APPDIR/usr/bin/naipe-logger" "$@"' >> NaipeLogger.AppDir/AppRun
          chmod +x NaipeLogger.AppDir/AppRun
          
          ./appimagetool-x86_64.AppImage NaipeLogger.AppDir naipe-logger-linux.AppImage

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: naipe-logger-linux
          path: |
            build/bin/*
            naipe-logger-linux.AppImage

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: naipe-logger-windows
          path: ./windows/

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: naipe-logger-linux
          path: ./linux/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Naipe Logger ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            windows/*.exe
            linux/naipe-logger-linux.AppImage
            linux/naipe-logger